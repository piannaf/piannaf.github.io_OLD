<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2010-07-10T09:00:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Suspect</title>
    <link rel="alternate" href="http://blog.url.com/article/2010/07/10/suspect.html"/>
    <id>http://blog.url.com/article/2010/07/10/suspect.html</id>
    <published>2010-07-10T09:00:00+09:00</published>
    <updated>2015-04-19T12:43:56+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Suspect, as the program for this assignment was called, taught me multi-process
programming and signal-handling.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Its basically an interpreter for a (very) small scripting language. The first
line of each scripts opens a child process and each successive line is a
command which allows interaction with the child process and the file system.&lt;/p&gt;

&lt;p&gt;The most fun I had with it was when I used Suspect to open another instance of
itself.&lt;/p&gt;

&lt;p&gt;This was the third assigment I did for COMP2303/7306 while getting my Masters
of Information Technology at the University of Queensland.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Single Player CLI Battleship</title>
    <link rel="alternate" href="http://blog.url.com/article/2010/07/09/single-player-cli-battleship.html"/>
    <id>http://blog.url.com/article/2010/07/09/single-player-cli-battleship.html</id>
    <published>2010-07-09T09:00:00+09:00</published>
    <updated>2015-04-19T12:39:53+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;By creating a single-player implementation of the well-known game ‘battle ship’,
I learned about writing and compiling a C program which interacted with the
user and file-system.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;This was the first assigment I did for COMP2303/7306 while getting my Masters
of Information Technology at the University of Queensland.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>SineMaster Lite</title>
    <link rel="alternate" href="http://blog.url.com/article/2010/01/30/sinemaster-lite.html"/>
    <id>http://blog.url.com/article/2010/01/30/sinemaster-lite.html</id>
    <published>2010-01-30T09:00:00+09:00</published>
    <updated>2015-04-19T12:34:16+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;SineMaster Lite is the result of learning a lot of the features of C# as well as a substantial amount of .NET pertaining to WPF.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;After spending a lot of time &lt;a href="http://understanding-c-sharp.blogspot.com/"&gt;dissecting Microsoft sample code&lt;/a&gt;,
I wanted to try my hand at a simple program.  This is a milestone to a larger
project I planned: a game called SineMaster. In SineMaster, you would be given
the image of a waveform and need to reproduce it by combining sine waves.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>WPF Calculator</title>
    <link rel="alternate" href="http://blog.url.com/article/2010/01/14/wpf-calculator.html"/>
    <id>http://blog.url.com/article/2010/01/14/wpf-calculator.html</id>
    <published>2010-01-14T09:00:00+09:00</published>
    <updated>2015-03-30T22:02:13+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Continuing my quest to understand .NET and C#, I refactored out all the XAML
from &lt;a href="http://msdn.microsoft.com/en-us/library/ms771362.aspx"&gt;the original sample&lt;/a&gt;
on MSDN into pure C#.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;It is a direct port so uses WPF and follows the same structure of the original
program.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Computer Systems Workbooks</title>
    <link rel="alternate" href="http://blog.url.com/article/2010/01/13/computer-systems-workbooks.html"/>
    <id>http://blog.url.com/article/2010/01/13/computer-systems-workbooks.html</id>
    <published>2010-01-13T09:00:00+09:00</published>
    <updated>2015-03-22T22:26:21+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;We had a lab every week to practice the engineering side of the class. The
tutors in charge of each session were under orders to be strict about the
workbook’s content so that we could learn to be professional. I have scanned
and uploaded my workbook for your perusal.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Basic Logic Gates — &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/1/Publication/Prac%201%20-%20Basic%20Logic%20Gates.pdf"&gt;Description&lt;/a&gt;, &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/1/Publication/prac001.pdf"&gt;Workbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Combinational Circuits — &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/2/Publication/Prac%202%20-%20Combinational%20Circuits.pdf"&gt;Description&lt;/a&gt;, &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/2/Publication/prac002.pdf"&gt;Workbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Flip Flops &amp;amp; Sequential Circuits — &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/3/Publication/Prac%203%20-%20Flip%20Flops%20%26%20Sequential%20Circuits.pdf"&gt;Description&lt;/a&gt;, &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/3/Publication/prac003.pdf"&gt;Workbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Circuit Design Task — &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/4/Publication/Prac%204%20-%20Circuit%20Design%20Task.pdf"&gt;Description&lt;/a&gt;, &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/4/Publication/prac004.pdf"&gt;Workbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Introduction to Microcontrollers and Assembly Language Programming — &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/5/Publication/Prac%205.pdf"&gt;Description&lt;/a&gt;, &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/5/Publication/prac005.pdf"&gt;Workbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;AVR Assembly Language Programming — &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/6/Publication/Prac%206%20-%20AVR%20Assembly%20Language%20Programming.pdf"&gt;Description&lt;/a&gt;, &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/6/Publication/prac006.pdf"&gt;Workbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;AVR C Programming — &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/7/Publication/Prac%207%20-%20AVR%20C%20Programming.pdf"&gt;Description&lt;/a&gt;, &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/7/Publication/prac007.pdf"&gt;Workbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;AVR I/O – Timer/Counter &amp;amp; Tone Generator — &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/8/Publication/Prac%208%20-%20AVR%20I_O%20-%20Timer_Counter%20%26%20Tone%20Generator.pdf"&gt;Description&lt;/a&gt;, &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/8/Publication/prac008.pdf"&gt;Workbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;AVR Interrupts &amp;amp; Serial I/O — &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/9/Publication/Prac%209%20-%20AVR%20Interrupts%20%26%20Serial%20I_O.pdf"&gt;Description&lt;/a&gt;, &lt;a href="https://github.com/piannaf/CSSE1000-Pracs/blob/master/9/Publication/prac009.pdf"&gt;Workbook&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>WPF Alarm Clock</title>
    <link rel="alternate" href="http://blog.url.com/article/2009/12/07/wpf-alarm-clock.html"/>
    <id>http://blog.url.com/article/2009/12/07/wpf-alarm-clock.html</id>
    <published>2009-12-07T09:00:00+09:00</published>
    <updated>2015-03-22T22:04:26+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;To get a better understanding of the .NET framework and C#, I refactored out
all the XAML from &lt;a href="https://msdn.microsoft.com/en-us/library/ms756487.aspx"&gt;MSDN's Alarm Clock sample&lt;/a&gt;
into pure C#.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;It is a direct port so uses WPF and follows the same structure of the original
program.&lt;/p&gt;
</content>
  </entry>
</feed>
